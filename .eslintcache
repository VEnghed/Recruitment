[{"/home/viktor/Repos/Recruitment/src/index.js":"1","/home/viktor/Repos/Recruitment/src/App.js":"2","/home/viktor/Repos/Recruitment/src/components/success.js":"3","/home/viktor/Repos/Recruitment/src/components/header/header.js":"4","/home/viktor/Repos/Recruitment/src/components/login/login.js":"5","/home/viktor/Repos/Recruitment/src/components/applicationpageview/applicationpage.js":"6","/home/viktor/Repos/Recruitment/src/components/register/register.js":"7","/home/viktor/Repos/Recruitment/src/components/recruiterpage/recruiter.js":"8"},{"size":219,"mtime":1612952319098,"results":"9","hashOfConfig":"10"},{"size":1037,"mtime":1614274523105,"results":"11","hashOfConfig":"10"},{"size":181,"mtime":1612952319098,"results":"12","hashOfConfig":"10"},{"size":380,"mtime":1614007956559,"results":"13","hashOfConfig":"10"},{"size":1375,"mtime":1614274523105,"results":"14","hashOfConfig":"10"},{"size":11704,"mtime":1614274523105,"results":"15","hashOfConfig":"10"},{"size":2945,"mtime":1614274250021,"results":"16","hashOfConfig":"10"},{"size":4136,"mtime":1614274523105,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"jwig4d",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"20"},"/home/viktor/Repos/Recruitment/src/index.js",[],["39","40"],"/home/viktor/Repos/Recruitment/src/App.js",[],"/home/viktor/Repos/Recruitment/src/components/success.js",[],"/home/viktor/Repos/Recruitment/src/components/header/header.js",["41"],"import './header.css'\nimport { Link } from 'react-router-dom'\n\n/**\n * An reusable header for all pages,\n * Sends the user back to the start page on click\n * @returns the header component\n */\nfunction Header() {\n    return (\n        <header className=\"header\">\n            <h2 onClick={() => window.location = '/'}>Recruitment</h2>\n        </header>\n    )\n}\n\nexport default Header;","/home/viktor/Repos/Recruitment/src/components/login/login.js",["42"],"import { useState } from \"react\";\nimport \"./login.css\";\nimport { Link } from \"react-router-dom\";\n\nfunction Login() {\n  const [username, setUsername] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  function Tellem() {\n    let data = {\n      username: username,\n      password: password,\n    };\n\n    fetch(\"/user/login\", {\n      method: \"POST\",\n      headers: {\n        Accept: \"application/json\",\n        \"Content-Type\": \"application/json\",\n      },\n      body: JSON.stringify(data),\n    })\n      .then((response) => response.json())\n      .then((data) => {\n        window.localStorage.setItem(\"token\", data.accessToken);\n        if (data.role == 2) {\n          window.location = \"/application\";\n        } else {\n          window.location = \"/recruiter/search\";\n        }\n      })\n      .catch(console.log);\n  }\n\n  return (\n    <div className=\"App\">\n      <div>\n        Username\n        <input\n          type=\"text\"\n          value={username}\n          onChange={(event) => setUsername(event.target.value)}\n        ></input>\n      </div>\n      <div>\n        Password\n        <input\n          type=\"text\"\n          value={password}\n          onChange={(event) => setPassword(event.target.value)}\n        ></input>\n      </div>\n      <button onClick={Tellem}>Submit</button>\n      <Link to=\"/register\">Register</Link>\n    </div>\n  );\n}\n\nexport default Login;\n","/home/viktor/Repos/Recruitment/src/components/applicationpageview/applicationpage.js",[],"/home/viktor/Repos/Recruitment/src/components/register/register.js",["43"],"import './register.css';\nimport { useState } from 'react';\nimport { Redirect } from 'react-router-dom'\n\n/**\n * the function component that renders the register page.\n * Lets the user create an account on the recruiter application\n * @returns a component representing the register page\n */\nfunction Register() {\n  const [firstName, setFirstName] = useState('')\n  const [lastName, setLastName] = useState('')\n  const [username, setUserName] = useState('')\n  const [password, setPassword] = useState('')\n  const [email, setEmail] = useState('')\n  const [ssn, setSsn] = useState('')\n  const [errorMsg, setErrormsg] = useState('')\n\n  /**\n   * registers a valid user, the user \n   * must fill in all required fields\n   */\n  function registerUser() {\n    if(!firstName || !lastName || !username || !password || !email || !ssn) {    //check if all required fields are filled\n      setErrormsg(\"Please fill in all required fields\")\n      return\n    }\n\n    let newUser = ({\n      role: 2,\n      firstName: firstName,\n      lastName: lastName,\n      username: username,\n      password: password,\n      email: email,\n      ssn: ssn\n    })\n\n    fetch('/user/register', {\n      method: 'POST', \n      headers: {\n        'Accept': 'application/json',\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(newUser)\n    }).then(response => {\n      console.log(response)\n      //check if the user is registered\n      if(response.status === 500) {         // internal error\n        setErrormsg(response.statusText)\n      } \n      if(response.status === 400) {         // bad request\n        setErrormsg(response.statusText)\n      }\n      else if(response.status === 201) {    // user is registered \n        window.location = \"/application\" \n      }\n    })\n  }\n\n  return (\n    <div className=\"register-container\">\n      <h2 className=\"register-text\" >Register</h2>\n      <h4 className=\"errorText\" >{errorMsg}</h4>\n      <div>\n        <input id=\"fname\" type=\"text\" placeholder=\"first name\" value={firstName} onChange={event => setFirstName(event.target.value)} ></input>\n        <input id=\"lname\" type=\"text\" placeholder=\"last name\"  value={lastName} onChange={event => setLastName(event.target.value)}></input>\n      </div>\n      <div>\n        <input id=\"username\" type=\"text\" placeholder=\"username\"  value={username} onChange={event => setUserName(event.target.value)}></input>\n        <input id=\"password\" type=\"password\" placeholder=\"password\"  value={password} onChange={event => setPassword(event.target.value)}></input>\n      </div>\n      <div>\n        <input id=\"email\" type=\"text\" placeholder=\"mail\"  value={email} onChange={event => setEmail(event.target.value)}></input>\n        <input id=\"ssn\" type=\"text\" placeholder=\"ssn\"  value={ssn} onChange={event => setSsn(event.target.value)}></input>\n      </div>\n      <button className=\"register-btn\" onClick={registerUser}>Register</button>\n    </div>\n  );\n}\n\nexport default Register;","/home/viktor/Repos/Recruitment/src/components/recruiterpage/recruiter.js",["44"],"import './recruiter.css';\nimport { useState } from 'react';\nimport { Redirect } from 'react-router-dom'\n\n/**\n * the function component that renders the recruitment page,\n * lets users list applications based on given parameters.\n * @returns a react component rendering the recruitment page\n */\nfunction Recruiter() {\n    const [name, setName] = useState('')\n    const [timeperiodfrom, setTimeperiodfrom] = useState('')\n    const [timeperiodto, setTimeperiodto] = useState('')\n    const [competence, setCompetence] = useState('')\n    const [applications, setApplications] = useState()\n    const [errorMsg, setErrormsg] = useState('')\n\n    /**\n     * sends a search query to server with\n     * given parameters\n     */\n    function searchApplicants() {\n        if(!name || !timeperiodfrom || !timeperiodto || !competence) {      //check if all required fields are filled\n            setErrormsg(\"Please fill in all required fields\")\n            return;\n        }\n        \n        let data = ({\n            query: {                                                        // the query\n                name: name,\n                timeperiodfrom: timeperiodfrom,\n                timeperiodto: timeperiodto,\n                competence: competence\n            }                                                               // get token for authorization\n        })\n\n        fetch('/recruiter/search', {\n            method: 'POST', \n            headers: {\n              'Accept': 'application/json',\n              'Content-Type': 'application/json',\n              'Authorization':'Bearer ' + window.localStorage.getItem(\"token\")   \n            },\n            body: JSON.stringify(data)\n        }).then(response => {\n            if(response.status === 500)             // internal error\n                setErrormsg(response.statusText)\n            if(response.status === 400)             // bad request\n                setErrormsg(response.statusText)\n            else if(response.status === 200) {      // query is valid \n                response.json().then(result => {\n                    console.log(result)\n                    showApplications(result)\n                })\n            }\n        }) \n    }\n\n    //function for creating elements & putting values\n    function showApplications(response) {\n       let applications = response.map(application => (\n            <li key={application.firstname} onClick={() => goToDetails()}>\n                {application.firstname + \" \" + application.lastname + \"\\t-\\t\" + application.applicationdate} \n            </li>\n        ))\n        setApplications(applications);\n    }\n\n    /**\n     * Go to applicant details with certain applicant\n     */\n    function goToDetails() {\n        window.location = \"/details:id\" \n        //return <Redirect to=\"/details\"></Redirect>\n    }\n\n    /**\n     * loads more applicants to view\n     */\n    function loadMoreApplicants() {\n        //comming soon\n    }\n        \n    return (\n        <div className=\"recruiter-container\">\n          <h2 className=\"register-text\" >Recruitment</h2> \n          <h4 className=\"errorText\" >{errorMsg}</h4>\n          <div className=\"search-bar\">\n            <input id=\"name\" type=\"text\" placeholder=\"Name\" value={name} onChange={event => setName(event.target.value)}></input>\n            <input id=\"time-period-from\" type=\"text\" placeholder=\"From\" value={timeperiodfrom} onChange={event => setTimeperiodfrom(event.target.value)}></input>\n            <input id=\"time-period-to\" type=\"text\" placeholder=\"To\" value={timeperiodto} onChange={event => setTimeperiodto(event.target.value)}></input>\n            <input id=\"competence\" type=\"text\" placeholder=\"Competence\" value={competence} onChange={event => setCompetence(event.target.value)}></input>\n            <button className=\"search-btn\" onClick={() => searchApplicants()}>Search</button>\n          </div>\n        <hr></hr>\n        <div className=\"search-results\" >\n            <ul>{applications}</ul>\n        </div>\n        <button className=\"load-applicants-btn\" onClick={() => loadMoreApplicants()}>Load more applicants</button>\n        </div>\n    );\n}\n\nexport default Recruiter;",{"ruleId":"45","replacedBy":"46"},{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","severity":1,"message":"50","line":2,"column":10,"nodeType":"51","messageId":"52","endLine":2,"endColumn":14},{"ruleId":"53","severity":1,"message":"54","line":26,"column":23,"nodeType":"55","messageId":"56","endLine":26,"endColumn":25},{"ruleId":"49","severity":1,"message":"57","line":3,"column":10,"nodeType":"51","messageId":"52","endLine":3,"endColumn":18},{"ruleId":"49","severity":1,"message":"57","line":3,"column":10,"nodeType":"51","messageId":"52","endLine":3,"endColumn":18},"no-native-reassign",["58"],"no-negated-in-lhs",["59"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Redirect' is defined but never used.","no-global-assign","no-unsafe-negation"]